<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.
com.puppycrawl.tools.checkstyle.
-->

<module name="Checker">

	<module name="StrictDuplicateCode"/>
	
	<module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocMethod">
        	<property name="severity" value="warning"/>
		</module>
		<module name="JavadocType">
        	<property name="severity" value="warning"/>
		</module>
		<module name="JavadocVariable">
        	<property name="severity" value="info"/>
		</module>
      <module name="JavadocStyle">
        	<property name="severity" value="info"/>
		</module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName"/>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>


        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name="Header">                            -->
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name="headerFile"                                  -->
            <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport"/>
		<module name="IllegalImport"/> <!-- defaults to sun.* packages -->
		<module name="RedundantImport">
        	<property name="severity" value="warning"/>
		</module>
		<module name="UnusedImports">
        	<property name="severity" value="warning"/>
		</module>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="FileLength"/>
        <!--
        <module name="LineLength"/>
        -->
		<module name="MethodLength"/>
		<module name="ParameterNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <!--
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        
        <module name="TabCharacter"/>
        
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
			-->

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder">
			<property name="severity" value="warning"/>
		</module>
        <!--
        <module name="RedundantModifier"/>
			-->

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<module name="LeftCurly">
			<property name="severity" value="warning"/>
			<property name="option" value="eol"  />
		</module>
		<module name="NeedBraces"/>
		<!--
		<module name="RightCurly">
			<property name="option" value="alone"  />
			<property name="severity" value="warning"/>
			<property name="tokens" value="LITERAL_TRY,LITERAL_FINALLY,LITERAL_IF"/>
			<property name="tokens" value="LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_IF"/> 
			
		</module>
		-->


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidInlineConditionals">
        	<property name="severity" value="warning"/>
			</module>
        <module name="DoubleCheckedLocking"/>    <!-- MY FAVOURITE -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField"/>
        <!-- <module name="EqualsAvoidNull"/> -->
		<module name="IllegalInstantiation">
		    <property name="classes" value="java.lang.Boolean"/>
		</module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="RedundantThrows">
        	<property name="severity" value="warning"/>
			</module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
		<module name="ModifiedControlVariable"/>
		
        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/> -->
        <module name="FinalClass">
        	<property name="severity" value="warning"/>
			</module>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier">
    			<property name="protectedAllowed" value="true"/>
		  </module>
		  

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle">
        	<property name="severity" value="warning"/>
		</module>
        <!-- <module name="FinalParameters"/> -->
        <!--
        <module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module> -->
        
        <module name="GenericIllegalRegexp">
    		<!-- . matches any character, so we need to     escape it and use \. to match dots. -->
    		<property name="format" value="System\.out\.println"/>
    		<property name="message" value="No esta permitido utilizar System.out.println. Utilice el sistema de trazas"/>
		  </module>
		  
        <module name="GenericIllegalRegexp">
    		<!-- . matches any character, so we need to     escape it and use \. to match dots. -->
    		<property name="format" value="\.printStackTrace\("/>
    		<property name="message" value="No esta permitido invocar printStackTrace. Utilice el sistema de trazas"/>
		  </module>
		  		  
        <module name="TodoComment">
        	<property name="severity" value="warning"/>
		</module>
        <module name="UpperEll">
        	<property name="severity" value="warning"/>
		</module>

    </module><!-- treewalk -->

</module>
